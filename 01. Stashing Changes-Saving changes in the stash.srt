1
00:00:00,000 --> 00:00:04,990
In this chapter we're going to learn about a future of Git called the stash.

2
00:00:05,000 --> 00:00:08,990
The stash is a place where we can store changes temporarily without having to commit them

3
00:00:09,000 --> 00:00:09,990
to the repository.

4
00:00:10,000 --> 00:00:13,990
It's a lot like putting something into a drawer to save it for later.

5
00:00:14,000 --> 00:00:17,990
The stash is not part of the repository, the staging index or the working directory, it's

6
00:00:18,000 --> 00:00:22,990
a special fourth area in Git, separate from the others.

7
00:00:23,000 --> 00:00:26,990
And the things that we put into it aren't commits, but they're a lot like commits, they

8
00:00:27,000 --> 00:00:27,990
work in a very similar way.

9
00:00:28,000 --> 00:00:33,990
They're still a snapshot of the changes that we were in the process of making, just like a commit is.

10
00:00:34,000 --> 00:00:36,990
But they dont have a SHA associated with them.

11
00:00:37,000 --> 00:00:39,990
Let's try making a change, and then we can store it in the stash.

12
00:00:40,000 --> 00:00:44,990
Let's start by checking out one of our other branches. Let's check out this shorten_title

13
00:00:45,000 --> 00:00:49,990
branch, so git checkout shorten_title.

14
00:00:50,000 --> 00:00:53,990
Now the shorten_title branch does not include the changes that we've made to our text_edits branch.

15
00:00:54,000 --> 00:01:00,990
So git branch --merged, you'll see that it includes all the changes that are in seo_title, but

16
00:01:01,000 --> 00:01:04,990
not the changes that are in either master or in text_edits.

17
00:01:05,000 --> 00:01:10,990
So if you remember back we've made some changes before to the mission file.

18
00:01:11,000 --> 00:01:13,990
Let's open up that file again, and let's make another edit to this file.

19
00:01:14,000 --> 00:01:17,990
I'm just going to say Explore California: Our Mission, change the title of it.

20
00:01:18,000 --> 00:01:22,990
So I'll save that, close it up, git status, we see the change.

21
00:01:23,000 --> 00:01:27,990
While we've got that change there, let's now try to switch branches back to our master

22
00:01:28,000 --> 00:01:33,990
branch, checkout master, it says nope, you can't do that, because if you did it would

23
00:01:34,000 --> 00:01:39,990
overwrite the changes that you just made because master has something different for mission.html.

24
00:01:40,000 --> 00:01:46,990
So please commit your changes or stash them before you can switch branches.

25
00:01:47,000 --> 00:01:48,990
This is a classic case of when we want to use stash.

26
00:01:49,000 --> 00:01:52,990
It's not the only time you can use it, you can use it any time you want to just take

27
00:01:53,000 --> 00:01:54,990
some stuff and shove it in a drawer.

28
00:01:55,000 --> 00:01:57,990
But this is the time that you'll probably use it most often when you need to switch

29
00:01:58,000 --> 00:02:02,990
branches, you have some changes, you're not quite ready to turn them into a commit yet,

30
00:02:03,000 --> 00:02:04,990
so we've got stash them instead.

31
00:02:05,000 --> 00:02:11,990
The way that we do it is we simply say, git stash save, so we're telling to git stash

32
00:02:12,000 --> 00:02:15,990
that we want it to save our changes, and then we're going to provide a message.

33
00:02:16,000 --> 00:02:20,990
Now there's no -m option this time, we just provide the message inside quotes.

34
00:02:21,000 --> 00:02:26,990
So I'm going to say that the changes "changed mission page title."

35
00:02:27,000 --> 00:02:31,990
Now this can be anything. This is for your benefit. This is not a commit that anyone else is going to see,

36
00:02:32,000 --> 00:02:35,990
so it can be a little bit sloppier perhaps. It doesn't have to have a good message the

37
00:02:36,000 --> 00:02:38,990
way that you should do with the commit, but it should be something descriptive that's

38
00:02:39,000 --> 00:02:42,990
going to be meaningful to you when you come back and look at it later and try and remember

39
00:02:43,000 --> 00:02:44,990
what was it that you put into the stash.

40
00:02:45,000 --> 00:02:51,990
So we'll hit Return, save the working directory and index state on shorten_title, changed mission

41
00:02:52,000 --> 00:02:57,990
page title, HEAD is now at here, swap out - for : in index.html title.

42
00:02:58,000 --> 00:03:03,990
So that's the name of the commit that I'm on now, git status, and you'll see that this

43
00:03:04,000 --> 00:03:11,990
is clean, git log --oneline, and I'll just do a couple of lines here, and you'll see

44
00:03:12,000 --> 00:03:13,990
this is the commit that it's on now.

45
00:03:14,000 --> 00:03:17,990
So it stashes the changes and says, now you're back here at that commit.

46
00:03:18,000 --> 00:03:23,990
So what it actually did, after I put those changes into the stash, was it ran git reset

47
00:03:24,000 --> 00:03:28,990
hard HEAD, so if you remember what we talked about with git reset hard, that takes whatever

48
00:03:29,000 --> 00:03:34,990
is in the Repo, and puts thats into both our index and our working directory, so they're

49
00:03:35,000 --> 00:03:38,990
exactly the same as the commit where HEAD is pointing right now.

50
00:03:39,000 --> 00:03:44,990
One note, if you did have untracked files, you can include those too, you use these include,

51
00:03:45,000 --> 00:03:45,990
untracked option.

52
00:03:46,000 --> 00:03:47,990
You can look that up in the help file if you need to.

53
00:03:48,000 --> 00:03:50,990
But normally this would just include things that are in your working directory, which

54
00:03:51,000 --> 00:03:54,990
are tracked files, because those are the things that would conflict, it would keep us from

55
00:03:55,000 --> 00:03:55,990
being able to switch.

56
00:03:56,000 --> 00:03:59,990
So that's it. That's all there is to be able to put things into the stash.

57
00:04:00,000 --> 00:04:02,990
Now we are going to see how we can take a look at things that are in the stash, and

58
00:04:03,000 --> 00:04:04,990
that's what we'll do in the next movie.

59
00:04:05,000 --> 00:04:15,000


