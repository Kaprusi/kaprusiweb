1
00:00:00,000 --> 00:00:05,990
We now know how to merge one branch into another and Git does a really good job at figuring

2
00:00:06,000 --> 00:00:07,990
out how to merge those together.

3
00:00:08,000 --> 00:00:12,990
For example, let's say that we've our index.html file and in the master branch we make a change

4
00:00:13,000 --> 00:00:16,990
to the top of the index.html file, somewhere near the top of html we make an edit.

5
00:00:17,000 --> 00:00:20,990
Then we have another branch that we're merging in, and we made a change near the bottom of

6
00:00:21,000 --> 00:00:22,990
the index.html file.

7
00:00:23,000 --> 00:00:26,990
That's not a problem for Git. Git sees those, it recognizes the line numbers and realizes

8
00:00:27,000 --> 00:00:30,990
that those are not next to each other, and it takes both of those changes and incorporates

9
00:00:31,000 --> 00:00:32,990
them into one composite document.

10
00:00:33,000 --> 00:00:37,990
Having two versions of a single document is not a problem, most of the time.

11
00:00:38,000 --> 00:00:42,990
However, a conflict occurs when there're two changes to the same line or set of lines in

12
00:00:43,000 --> 00:00:46,990
two different commits, because then Git can't decide which one to use or how to merge them

13
00:00:47,000 --> 00:00:49,990
together and so we get a merge conflict.

14
00:00:50,000 --> 00:00:54,990
And this is the one headache about working with branches is resolving merge conflicts.

15
00:00:55,000 --> 00:00:57,990
So let's first talk about what it is, and then we can talk about how to solve them.

16
00:00:58,000 --> 00:01:01,990
So just a quick example, let's say that we have our master branch, and we have a line somewhere

17
00:01:02,000 --> 00:01:05,990
in one of our HTML files this says Git is great, and it has <span> tags around it.

18
00:01:06,000 --> 00:01:09,990
From my master branch we create a new branch, we'll call it the new_styles branch.

19
00:01:10,000 --> 00:01:11,990
And we start making edits over there.

20
00:01:12,000 --> 00:01:14,990
We got all sorts of commits going on, at the same time we're switching back to master,

21
00:01:15,000 --> 00:01:17,990
and we're making edits back there as well.

22
00:01:18,000 --> 00:01:22,990
One of the edits that we commit to master is that we change the <span> tags into <strong>

23
00:01:23,000 --> 00:01:25,990
tags, and then we keep making more commits, we switch back to new_styles, we're making

24
00:01:26,000 --> 00:01:27,990
more commits over there.

25
00:01:28,000 --> 00:01:34,990
At some point, we make an edit in the new_styles branch so that we change the <span> tags into <em> tags.

26
00:01:35,000 --> 00:01:39,990
So now we've two different versions of this line. In the master branch it has <strong> tags

27
00:01:40,000 --> 00:01:43,990
around it, in the new_styles branch it's got <em> or emphasis tags around it.

28
00:01:44,000 --> 00:01:49,990
So when we go to merge new_styles back into master, Git doesn't know which one of these we prefer.

29
00:01:50,000 --> 00:01:53,990
Git says I can't choose between these. I don't have any idea what's your intention

30
00:01:54,000 --> 00:01:55,990
was, so I need you to tell me.

31
00:01:56,000 --> 00:01:58,990
So git will mark the conflict and wait for you to fix the problem.

32
00:01:59,000 --> 00:02:01,990
Let's try this in our explore_california project.

33
00:02:02,000 --> 00:02:05,990
The page I'm going to use to generate a conflict is going to be this mission.html page so just

34
00:02:06,000 --> 00:02:08,990
open that up real quick so you can see it.

35
00:02:09,000 --> 00:02:12,990
And what I want to do is I'm going to create a merge conflict in this text down here.

36
00:02:13,000 --> 00:02:15,990
So in order to that, we have to create the conditions that will make that happen.

37
00:02:16,000 --> 00:02:21,990
The first thing is let's make a new branch, so git checkout -b text_edits.

38
00:02:22,000 --> 00:02:28,990
Now remember, checkout -b is checkout as a new branch, or create a branch, and then switch to it.

39
00:02:29,000 --> 00:02:34,990
Now in my new branch let's open up mission.html, and this is just a text_edit branch, the idea

40
00:02:35,000 --> 00:02:36,990
here is it's a branch dedicated to making edits to the text.

41
00:02:37,000 --> 00:02:40,990
So I'm going to scroll down to that block of text, and let's make some edits here.

42
00:02:41,000 --> 00:02:44,990
We are passionate about Californian preserving the abundant resources that make it so unique.

43
00:02:45,000 --> 00:02:47,990
Our goal at Export California is transform your vacation into adventure that will educate,

44
00:02:48,000 --> 00:02:49,990
inspire, and energize you unlike any other.

45
00:02:50,000 --> 00:02:53,990
Let's take away unlike any other, it'll just energize you.

46
00:02:54,000 --> 00:02:56,990
Okay, that's good so that's an edit to line 65 right here.

47
00:02:57,000 --> 00:02:58,990
All right, now let's see line 66.

48
00:02:59,000 --> 00:03:01,990
Our tours are crafted around our central mission, and are deigned to engage you in a unique

49
00:03:02,000 --> 00:03:02,990
and fulfilling way.

50
00:03:03,000 --> 00:03:06,990
All our tours are sensitive to the environment, and will provide you will the opportunity

51
00:03:07,000 --> 00:03:07,990
to explore California in your own way.

52
00:03:08,000 --> 00:03:13,990
Let's say, they're, cut this, and we will say they're environmentally sensitive, instead.

53
00:03:14,000 --> 00:03:18,990
Okay, so environmentally sensitive, so we made edit to line 66, and then let's comedown here to

54
00:03:19,000 --> 00:03:22,990
line 67, let's change this quote here into being have.

55
00:03:23,000 --> 00:03:27,990
It's simply really, we'll leave that, and let's see, we ask ourselves one question, we'll

56
00:03:28,000 --> 00:03:30,990
say we ask ourselves a question.

57
00:03:31,000 --> 00:03:30,990
And I think that's good.

58
00:03:31,000 --> 00:03:32,990
Okay, so we have made an edit to line 67.

59
00:03:33,000 --> 00:03:35,990
So 65, 66, and 67 have all had edits.

60
00:03:36,000 --> 00:03:39,990
Let's make one to line 68, we have worked for a tour company.

61
00:03:40,000 --> 00:03:42,990
Okay, so now each one of those lines has some edits in it.

62
00:03:43,000 --> 00:03:45,990
So we could go on and you keep editing as much as you like.

63
00:03:46,000 --> 00:03:50,990
Let's now save that document and close, now we're on our text_edits branch, we know that

64
00:03:51,000 --> 00:03:53,990
we've made changes, we can see that with git status.

65
00:03:54,000 --> 00:03:58,990
So now we can do a commit, and we'll do that with git commit, and I will use the -am

66
00:03:59,000 --> 00:04:05,990
option, and then my message will be "Text edits on mission page."

67
00:04:06,000 --> 00:04:09,990
Okay, so now I've made that commit to my text_edits branch.

68
00:04:10,000 --> 00:04:12,990
So now let's go back and let's check out our master branch.

69
00:04:13,000 --> 00:04:17,990
All right, so now we're back in the master branch, this does not have that edit in there,

70
00:04:18,000 --> 00:04:22,990
let's go in to mission.html, and let's scroll down to that big block of text.

71
00:04:23,000 --> 00:04:26,990
You'll see that those changes that I made, like we've, right, those are all gone.

72
00:04:27,000 --> 00:04:29,990
We have the old version and the change that I'm going to make here is that I'm going to

73
00:04:30,000 --> 00:04:32,990
change the quotes here.

74
00:04:33,000 --> 00:04:34,990
See if we still have this up, these are straight double quotes.

75
00:04:35,000 --> 00:04:36,990
You can see those here.

76
00:04:37,000 --> 00:04:39,990
What I want to do is turn those into curly quotes.

77
00:04:40,000 --> 00:04:44,990
So let's go back here, and we'll make this one left double quote, and this one is right double quote.

78
00:04:45,000 --> 00:04:50,990
Okay, and let's while we are at it, let's go ahead and make this one &rsquo, and that will take

79
00:04:51,000 --> 00:04:54,990
care of that, let's copy that, let's paste that in here for the tours, we are basically

80
00:04:55,000 --> 00:04:56,990
just making all of these curly.

81
00:04:57,000 --> 00:05:00,990
Okay, so all of those have now been turned into curly ones. I may have missed some, in

82
00:05:01,000 --> 00:05:03,990
fact, here is one right here, and right single quote.

83
00:05:04,000 --> 00:05:09,990
Okay, so let's close that document now, and let's make this commit, git commit and

84
00:05:10,000 --> 00:05:17,990
"Replaces double quotes with curly quotes," actually I can do it with single quotes too,

85
00:05:18,000 --> 00:05:22,990
not just the double quotes, let's say, Replace straight quotes.

86
00:05:23,000 --> 00:05:29,990
Okay, so now let's remind ourselves what we have, git log --oneline, this is in the master

87
00:05:30,000 --> 00:05:32,990
branch, oops, some typo there.

88
00:05:33,000 --> 00:05:36,990
Replaces straight quotes with curly quotes is the merge that comes right after the merge

89
00:05:37,000 --> 00:05:38,990
with this shorten_title branch.

90
00:05:39,000 --> 00:05:45,990
If we check the same thing, put in our text_edits branch, you'll see that we have our shorten_title

91
00:05:46,000 --> 00:05:48,990
merge here, and then we have our new commit here.

92
00:05:49,000 --> 00:05:52,990
But those two commits change some of the same conflict.

93
00:05:53,000 --> 00:05:55,990
So let's try and merge now, so just to remind you, here are our branches.

94
00:05:56,000 --> 00:06:01,990
We're going to do git merge, and then we can say, text_edits.

95
00:06:02,000 --> 00:06:07,990
Says auto-merging CONFLICT, merge conflict in, and it gives us a list of all the things

96
00:06:08,000 --> 00:06:09,990
that have conflicts, mission.html.

97
00:06:10,000 --> 00:06:13,990
Automatic merge failed, fix conflicts and then commit the result.

98
00:06:14,000 --> 00:06:19,990
Okay, so now notice that my branch now says master and MERGING, right? I'm not fully on

99
00:06:20,000 --> 00:06:24,990
my master branch, I'm in the middle of a merge, it's letting me know that.

100
00:06:25,000 --> 00:06:29,990
Let's take a look, if we do git status, look what it comes up and tells me, unmerged paths

101
00:06:30,000 --> 00:06:34,990
right here, it tells me to use add and remove on them, to mark the resolution, tells me both have

102
00:06:35,000 --> 00:06:39,990
been modified, both versions of mission.html, and so nothing is ready to commit yet.

103
00:06:40,000 --> 00:06:41,990
I need to fix these problems.

104
00:06:42,000 --> 00:06:49,990
Let's open up mission.html, and let's scroll down to see how Git marked those problems, here it is.

105
00:06:50,000 --> 00:06:54,990
This is what is in the HEAD, which is remember, the master branch, the current branch that I'm on.

106
00:06:55,000 --> 00:06:59,990
And it tells me those lines, and then it's got a bunch of equal signs, and then it's

107
00:07:00,000 --> 00:07:03,990
got another block here, and it tells me that that's what's in the text_edits branch.

108
00:07:04,000 --> 00:07:08,990
So now it's up to me to go through and decide which one of these I want.

109
00:07:09,000 --> 00:07:12,990
But there are three lines that were different in each one, and each one had some conflicts in it.

110
00:07:13,000 --> 00:07:17,990
Now that we see how merge conflicts occur, and we see that Git marks them using symbols

111
00:07:18,000 --> 00:07:21,990
like this, we're ready to talk about how to resolve these merge conflicts, and we'll do

112
00:07:22,000 --> 00:07:25,990
that in the next movie.

113
00:07:26,000 --> 00:07:36,000


